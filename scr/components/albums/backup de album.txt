const AlbumDetail = ({ selectedAlbum, navigation, isLoading, route, ...props }) => {
    const { width, height } = Dimensions.get('window')

    const fetchCorrect = () => !_.isEqual(selectedAlbum, {})
    // useEffect(() => {
    //     props.fetchArtist()
    // }, []);

    const isFavorite = (selectedAlbum) => props.favoriteAlbums.some(favoriteTrack => favoriteTrack.artist.id === selectedArtist.id)

    return (
        <BaseLoaderView
            fetchCorrectly={fetchCorrect()}
            isLoading={isLoading}
            style={{ backgroundColor: bg, minHeight: '100%', paddingTop: useHeaderHeight() }}
            childrenView={() =>
                (<ScrollView
                >
                    <View style={{
                        justifyContent: 'center',
                        alignItems: 'center',
                    }}>
                        <Image
                            source={{ uri: `https://picsum.photos/seed/${selectedAlbum.title}/400` }}

                            style={{
                                height: 300,
                                width: 300,

                                marginVertical: 10,
                                marginHorizontal: 15,
                            }}
                        />
                    </View>
                    <View style={{ marginTop: 25, flexDirection: 'column' }}>
                        <Text style={{ color: 'white', flex: 1, fontSize: 20, fontWeight: '600', textAlign: 'center' }}>
                            {selectedArtist.name}
                        </Text>
                    </View>
                    <View style={{ height: 30, marginVertical: 20, flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>
                        <TouchableHighlight
                            style={{ flex: 0.15, alignContent: 'center' }}
                            onPress={() => !isFavorite(selectedArtist) ? props.addFavoriteArtist() : props.deleteFavoriteArtist()}
                        >
                            <Image
                                resizeMode="contain"
                                style={{
                                    width: undefined,
                                    marginHorizontal: 3,
                                    flex: 1,
                                }} source={
                                    isFavorite(selectedArtist) ? require('../../assets/images/isFavorite.png') : require('../../assets/images/favorite.png')
                                } />
                        </TouchableHighlight>
                    </View>

                    <View style={{ padding: 20 }}>
                        <Text style={{ color: 'white', fontSize: 18, fontWeight: '600', textAlign: 'center' }}>
                            CANCIONES
                        </Text>
                        <Text style={{ color: 'white', fontSize: 16, marginVertical: 20, fontWeight: '600', textAlign: 'center' }}>
                            {selectedArtist.bio}
                        </Text>
                    </View>
                    <Text style={{ marginLeft: 15, fontSize: 18, color: 'white' }}>Albumes que te podrian interesar</Text>
                    <FlatList
                        ListEmptyComponent={() => <Text
                            numberOfLines={2}
                            style={{ width: width - 40, marginVertical: 10, paddingHorizontal: 20, fontSize: 18, color: 'white' }}>
                            No tiene albumes disponibles por el momento :(</Text>}
                        data={_.sampleSize(selectedArtist.albums, 5)}
                        horizontal={true}
                        keyExtractor={item => item.id}
                        renderItem={({ item }) =>
                            <AlbumItem navigation={navigation} album={item} />
                        }
                    />

                </ScrollView>)
            }
        >
        </BaseLoaderView>
    )
}